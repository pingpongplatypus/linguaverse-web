name: Deploy to Firebase App Hosting

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # Checks out your repository
      - run: npm install # Installs project dependencies

      # NEW DIAGNOSTIC STEP: Test a simple secret value
      - name: Debug Test Secret
        run: echo "The TEST_SECRET_VALUE is: ${{ secrets.TEST_SECRET_VALUE }}"

      # MODIFIED STEP: Pass FIREBASE_ADMIN_SDK_CONFIG using the 'env' block for consistency and robustness
      - name: Build Next.js Application
        run: npm run build
        env:
          FIREBASE_ADMIN_SDK_CONFIG: '${{ secrets.FIREBASE_ADMIN_SDK_CONFIG }}' # Should now work consistently

      # Install Firebase CLI globally
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Authenticate Firebase CLI with Service Account
      # This creates a temporary service account key file and sets the GOOGLE_APPLICATION_CREDENTIALS env var
      # which persists for subsequent steps in the job.
      - name: Authenticate Firebase CLI with Service Account
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROJECT_X_68603 }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_JSON" > /tmp/service-account-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account-key.json" >> $GITHUB_ENV # This makes it available to the next step

      # Deploy to Firebase App Hosting using the Firebase CLI
      - name: Deploy to Firebase App Hosting using CLI
        run: firebase apphosting:deploy --project project-x-68603 --backend-id linguaverse-web --input-directory out
        # GOOGLE_APPLICATION_CREDENTIALS is now set and persistent from the previous step.
        # FIREBASE_ADMIN_SDK_CONFIG is handled by the build step's env block.
